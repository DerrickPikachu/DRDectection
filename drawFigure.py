import matplotlib.pyplot as plt
import numpy as np


def draw_multiline(epochs, train_accuracy, test_accuracy, labels):
    x_axis = np.arange(epochs) + 1
    num_of_line = len(train_accuracy)
    for i in range(num_of_line):
        plt.plot(x_axis, train_accuracy[i], label=f'train({labels[i]})')
        plt.plot(x_axis, test_accuracy[i], label=f'test({labels[i]})', marker='o')

    plt.xlabel('Epochs')
    plt.ylabel('Accuracy(%)')
    plt.legend()
    plt.show()


if __name__ == "__main__":
    train = [
        [0.7323036406989573, 0.73507954019716, 0.7350439517420548, 0.73507954019716, 0.73507954019716,
         0.73507954019716, 0.73507954019716, 0.73507954019716, 0.73507954019716, 0.73507954019716],
        [0.7412363429303533, 0.7658635538631268, 0.7802768781807182, 0.7872166269262252, 0.7909534147122673,
         0.7955799138759386, 0.7983914018292466, 0.802377308801025, 0.8038720239154419, 0.8046549699277554]
    ]
    test = [
        [0.7330960854092526, 0.7335231316725979, 0.7282562277580071, 0.7286832740213524, 0.7312455516014235,
         0.7335231316725979, 0.7335231316725979, 0.7335231316725979, 0.7335231316725979, 0.7335231316725979],
        [0.7685409252669039, 0.7718149466192171, 0.7913167259786477, 0.7874733096085409, 0.788896797153025,
         0.7770818505338078, 0.7896085409252669, 0.7860498220640569, 0.7904626334519573, 0.7900355871886121]
    ]
    label = ['ResNet50-lr0.01', 'ResNet50-lr0.001']
    draw_multiline(10, train, test, label)
